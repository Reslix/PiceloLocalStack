services:
  redis: 
    image: redis:7.0-rc2
    container_name: redis-local
    ports: 
      - 6379:6379
    command: redis-server --loglevel warning --requirepass ${AWS_SECRET_ACCESS_KEY}

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - 8000:8000
    volumes:
      - type: bind
        source: ./dynamodb
        target: /home/dynamodblocal/data
    working_dir: /home/dynamodblocal
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"

  s3:
    image: minio/minio
    container_name: s3-local
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - type: bind
        source: ./minio
        target: /home/minios3
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}

    working_dir: /home/minios3
    command: "server ./picelo --console-address :9001"

  mc:
    image: minio/mc
    depends_on:
      - s3
    container_name: mcbkp-local
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set picelo http://s3:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb picelo/piceloimagerepo;
      /usr/bin/mc policy set public picelo/piceloimagerepo;"
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus-local
    ports:
      - 9090:9090
    volumes:
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml

  grafana: 
    image: grafana/grafana-oss
    container_name: grafana-local
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_SERVER_HTTP_PORT=3030
    depends_on:
      - prometheus
    ports: 
      - 3030:3030
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/